---
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import StatsGrid from "../../ui/blocks/StatsGrid.astro";

// Define props from Astro
const {
  Abouttitle,
  AboutsubTitle,
  AboutprimaryBtn,
  AboutprimaryBtnURL,
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  Abouttitle: string;
  AboutsubTitle?: string;
  AboutprimaryBtn?: string;
  AboutprimaryBtnURL?: string;
}

const {
  statistics
} = Astro.props;

interface Props {
  statistics?: StatProps[];
}

// TypeScript type for stats.
type StatProps = {
  count: string;
  description: string;
};
---

<!-- Defining a grid container that holds all the content -->
<section
  class="mx-auto grid max-w-[85rem] gap-4 px-4 py-14 md:py-20 sm:px-6 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 2xl:max-w-full"
>
  <!-- Hero Image Section -->
  <div class="flex w-full fadeInLeft">
    
    {statistics && (
      <div class="mt-10 lg:col-span-6 lg:col-end-13 lg:mt-0">
        <div class="space-y-6 sm:space-y-8">
          <ul class="grid grid-cols-2 divide-x-2 divide-y-2 divide-neutral-300 overflow-hidden dark:divide-white-700">
            <!-- Generate a list item for each stat in the statistics array by mapping over the array. -->
            {statistics.map((stat, index) => (
              <StatsGrid count={stat.count} description={stat.description} index={index} />
            ))}
          </ul>
        </div>
      </div>
    )}

  </div>
  <!-- Title and description -->
  <div>
    <div class="autoShow">
        <div class="col-span-full h-5/2 pb-12 md:pt-5 pt-8 w-full rounded-xl bg-neutral-100 dark:bg-white/[.075] sm:h-3/4 lg:col-span-7 lg:col-start-6 lg:h-full">
            <!-- Each h1 and p tag renders a portion of the title and subTitle defined above -->
            <h2 class="block text-balance text-3xl px-5 font-bold tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-4xl lg:text-6xl lg:leading-tight">
                <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
                <Fragment set:html={Abouttitle} />
            </h2>
            {AboutsubTitle &&
                <p class="mt-5 text-pretty text-base px-5 leading-relaxed text-neutral-700 dark:text-neutral-400 w-11/12">
                    {AboutsubTitle}
                </p>
            }
            <!-- Action Button Section: This section includes two CTAs with their own styles and URL -->
            <div class="mt-12 grid w-full gap-3 px-5 sm:inline-flex">
                {AboutprimaryBtn && 
                    <PrimaryCTA title={AboutprimaryBtn} url={AboutprimaryBtnURL} />
                }
            </div>
        </div>
    </div>
    
  
  <style>
    .autoShow{
    animation: autoShowAnimation both;
    animation-timeline: view(70% 5%);

    }

    @keyframes autoShowAnimation{
    from{
        opacity: 0;
        transform: translateY(200px) scale(0.3);
    }to{
        opacity: 1;
        transform: translateY(0) scale(1);
    }
    }
    
    .autoRotate{
    animation: autoRotateAnimation;
    animation-timeline: view();
    }
    @keyframes autoRotateAnimation{
    from{
        transform: rotate(90deg);
    }
    to{
        transform: rotate(360deg);
    }
    }

    .fadeInLeft {
    animation: fadeInLeftAnimation;
    animation-timeline: view();
    }

    @keyframes fadeInLeftAnimation {
        from {
            opacity: 0;
            transform: translateX(-100px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

  </style>

</section>


